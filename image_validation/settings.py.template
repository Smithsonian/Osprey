# ID of the project, must exist in the database already
project_id = ""


# Path where the folders are stored
project_datastorage = ""


# Are md5 files required to check the files in a folder?
md5_required = False


# Temp folder, usually /tmp
# No trailing slash
tmp_folder = "/tmp"


# Subfolders of files
main_files_path = "tifs"
raw_files_path = "raws"
derivative_files_path = "jpgs"


# API location
api_url = ""
api_key = ""



# How to split to parse the date, return the date in format 'YYYY-MM-DD'
def folder_date(folder_name):
    # Example as PREFIX-YYYYMMDD
    folder_date = folder_name.split('PREFIX-')[1]
    formatted_date = "{}-{}-{}".format(folder_date[0:4], folder_date[4:6], folder_date[6:8])
    return formatted_date


# Validate sequences
sequence_split = "_"
sequence = []


# Should the names match a db?
files_db = False
# How to find the list of valid names
# this has to be a valid query that will 
# be used in a subquery
filename_pattern_query = "SELECT COUNT(*) as no_records FROM (SELECT file_name FROM filename_table WHERE project_id = 100 AND file_name = '{}') a"


# How long to sleep between loops
# Set to False to run only once
# sleep = False
sleep = 180


# Path for programs in the system
jhove = "/usr/local/bin/jhove"
exiftool = "exiftool"
magick = None



tmp_folder = "/tmp"


# Path of where to save the JPG previews and size
jpg_previews = ""
# How much space to leave free, in decimal (0.1 is 10%)
jpg_previews_free = 0.1


# Scripts to run before or after checking the files. Set to None if it won't be used.
pre_script = None
post_script = None
